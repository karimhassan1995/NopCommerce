// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.Extensions.Options;

namespace Nop.Web.Models
{
    public partial class testContext : DbContext
    {
       /* public testContext()
        {
        }

        public testContext(DbContextOptions<testContext> options)
            : base(options)
        {
        }*/

       /* protected override void onConfiguring(DbContextOptionsBuilder)
        {
            OptionsBuilder.UseSqlServer("Server=HP\\KARIM;Database=test;Trusted_Connection=True;MultipleActiveResultSets=true");
            base.onConfiguring(OptionsBuilder);
        }*/

        public virtual DbSet<InvoiceSell> InvoiceSell { get; set; }
        public virtual DbSet<InvoiceSellUnit> InvoiceSellUnit { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        { 
            optionsBuilder.UseSqlServer("Data Source=HP\\KARIM;Initial Catalog=test;Integrated Security=True");
            base.OnConfiguring(optionsBuilder); 
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<InvoiceSell>(entity =>
            {
                entity.HasKey(e => new { e.buildingNo, e.invoiceNo });

                entity.Property(e => e.row_timestamp)
                    .IsRowVersion()
                    .IsConcurrencyToken();
            });

            modelBuilder.Entity<InvoiceSellUnit>(entity =>
            {
                entity.HasKey(e => new { e.invoiceNo, e.buildingNo, e.orderNo });

                entity.Property(e => e.row_timestamp)
                    .IsRowVersion()
                    .IsConcurrencyToken();
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}